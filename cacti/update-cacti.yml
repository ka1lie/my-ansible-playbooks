- hosts: application
  become: yes
  become_method: sudo
  tasks:

    - name: retrieve current version
      shell: cat /var/www/html/cacti/include/cacti_version
      register: cacti_version

    - name: check cacti.tar.gz exists
      find: paths="/home/localadmin/update" patterns="cacti-\d.*.tar.gz" use_regex="yes"
      register: cacti_tgz
    - name: check cacti-spine.tar.gz exists
      find: paths="/home/localadmin/update" patterns="cacti-spine-*.tar.gz"
      register: spine_tgz

  
    - block: # Execute if spine tar is exist
    
        - name: remove old spine
          command: rm -rf /usr/local/spine
        - name: untar spine
          unarchive:
            src: "{{ item.path }}"
            dest: /usr/local
          with_items: "{{ spine_tgz.files }}"
        - name: rename spine
          shell: mv /usr/local/cacti* /usr/local/spine
        - name: spine - bootstrap
          command: chdir=/usr/local/spine ./bootstrap
        - name: spine - configure
          command: chdir=/usr/local/spine ./configure
        - name: spine - make
          command: chdir=/usr/local/spine make
        - name: spine - make install
          command: chdir=/usr/local/spine make install
        - name: change spine owner
          command: chown root:root /usr/local/spine/bin/spine
        - name: change spine mod for executing
          command: chmod +s /usr/local/spine/bin/spine
        - name: copy old spine config
          shell: cp -f /home/localadmin/backups/spine_{{ cacti_version.stdout }}_{{ ansible_date_time.date }}/etc/spine.conf /usr/local/spine/etc/spine.conf

      when: spine_tgz.matched == "1"


    - block: # Execute if cacti tar is exist

        - name: remove old cacti
          command: rm -rf /var/www/html/cacti
        - name: untar cacti
          unarchive:
            src: "{{ item.path }}"
            dest: /var/www/html
          with_items: "{{ cacti_tgz.files }}"
        - name: rename cacti
          shell: mv /var/www/html/cacti* /var/www/html/cacti
        - name: remove cacti rra and add symlink
          shell: rm -rf /var/www/html/cacti/rra | yes | cp -Rf /home/localadmin/backups/cacti_{{ cacti_version.stdout }}_{{ ansible_date_time.date }}/rra /var/www/html/cacti
        - name: remove cacti log and add symlink
          shell: rm -rf /var/www/html/cacti/log | yes | cp -Rf /home/localadmin/backups/cacti_{{ cacti_version.stdout }}_{{ ansible_date_time.date }}/log /var/www/html/cacti
        - name: copy old plugins 
          shell: yes | cp -Rf /home/localadmin/backups/cacti_{{ cacti_version.stdout }}_{{ ansible_date_time.date }}/plugins /var/www/html/cacti
        - name: copy old snmp queries
          shell: yes | cp -Rf /home/localadmin/backups/cacti_{{ cacti_version.stdout }}_{{ ansible_date_time.date }}/resource/snmp_queries /var/www/html/cacti/resource
        - name: copy old scripts
          shell: yes | cp -Rf /home/localadmin/backups/cacti_{{ cacti_version.stdout }}_{{ ansible_date_time.date }}/scripts /var/www/html/cacti
        - name: copy old config
          shell: yes | cp /home/localadmin/backups/cacti_{{ cacti_version.stdout }}_{{ ansible_date_time.date }}/include/config.php /var/www/html/cacti/include/config.php
        - name: change owner to cacti directory
          command: chown -R apache:apache /var/www/html/cacti
      
      when: cacti_tgz.matched == "1"

- hosts: localhost:poller
  become: yes
  become_method: sudo
  tasks:

    - name: copy speedtest
      shell: yes | cp -Rf /home/localadmin/backups/cacti_{{ cacti_version.stdout }}_{{ ansible_date_time.date }}/speedtest /var/www/html/cacti
      when: cacti_tgz.matched == "1" and spine_tgz.matched == "1"